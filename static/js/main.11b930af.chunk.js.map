{"version":3,"sources":["config/Colors.ts","components/Header/style.ts","services/api.ts","components/Header/index.tsx","components/Body/style.ts","components/Body/index.tsx","style.ts","App.tsx","index.tsx"],"names":["normal","lighter","darker","Container","styled","div","Colors","api","axios","create","baseURL","Header","setMeal","useState","timer","setTimer","foodList","setFoodList","handleRandom","useCallback","a","get","meal","data","meals","handleChoose","name","searchMeals","value","clearInterval","timeOut","setTimeout","then","response","map","push","strMeal","type","placeholder","onChange","e","target","onBlur","length","food","onClick","key","size","FoodInfo","Tag","p","FoodPrepare","Body","setIngredients","tags","setTags","useEffect","rows","console","log","strYoutube","i","quantity","strTags","split","src","strMealThumb","alt","strCategory","strArea","tag","strInstructions","title","allow","replace","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11b930af.chunk.js","sourcesContent":["export default {\n  main: {\n    normal: \"#606C38\",\n    lighter: \"#778745\",\n    darker: \"#48512A\"\n  },\n  background: {\n    normal: \"#FEFAE0\",\n    lighter: \"#FFFFFF\",\n    darker: \"#FDF5C4\"\n  },\n  text: {\n    normal: \"#342E37\",\n    lighter: \"#3F3843\",\n    darker: \"#1F1C21\"\n  },\n  details: {\n    normal: \"#202A25\",\n    lighter: \"#2C3A33\",\n    darker: \"#060D0E\"\n  }\n\n}","import styled from 'styled-components';\nimport Colors from '../../config/Colors';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 10%;\n  background: ${Colors.main.normal};\n  padding: 12px;\n\n  > div {\n    display: flex;\n    width: 30%;\n    align-items: center;\n    justify-content: flex-end;\n    position: relative;\n\n    input {\n      padding: 6px;\n      background: ${Colors.background.normal};\n      border: 0px solid transparent;\n      width: 60%;\n      transition: .4s;\n\n      &:focus {\n        outline: 0;\n        width: 100%;\n      }\n\n      &:focus + ul {\n        width: 100%;\n        display: flex;\n        opacity: 1;\n        animation: showlist .4s;\n      }\n    }\n\n    ul {\n      list-style: none;\n      position: absolute;\n      top: 101%;\n      background: ${Colors.background.normal};\n      width: 60%;\n      overflow: auto;\n      max-height: 500px;\n      flex-direction: column;\n      opacity: 0;\n      box-shadow: 0 4px 4px 4px rgba(0,0,0,0.3);\n      transition: .4s;\n\n      li {\n        padding: 6px 10px;\n        transition: .6s;\n\n        &:hover {\n          background: rgba(119,135,69,0.7);\n        }\n      }\n\n      @keyframes showlist {\n        from {\n          opacity: 0;\n          transform: translateY(-40px);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n    }\n  }\n\n  svg {\n    margin-left: 12px;\n    color: ${Colors.background.normal};\n  }\n\n  button {\n    margin-left: 100px;\n    background: ${Colors.details.normal};\n    color: ${Colors.background.normal};\n    padding: 12px;\n    border-radius: 8px;\n    border: 0;\n    font-weight: bold;\n    transition: .4s;\n\n    &:hover {\n      cursor: pointer;\n      background: ${Colors.details.lighter};\n    }\n\n    &:focus {\n      outline: 0;\n    }\n\n  }\n`;","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://www.themealdb.com/api/json/v1/1/'\n});\n\nexport default api;\n","import React, { useCallback, useState } from 'react';\nimport { Container } from './style';\nimport { FiSearch } from 'react-icons/fi';\nimport api from '../../services/api';\n\ninterface HeaderProps {\n  setMeal: (meal: any) => void;\n}\n\nconst Header: React.FC<HeaderProps> = ({ setMeal }) => {\n\n  const [timer, setTimer] = useState<number>(0);\n  const [foodList, setFoodList] = useState<string[]>([]);\n\n  //Choosing a random meal\n  const handleRandom = useCallback(async () => {\n    const meal = await api.get('/random.php');\n    setMeal(meal.data.meals[0]);\n  }, [setMeal]);\n\n  //Handling the choosen recipe from the list\n  const handleChoose = useCallback(async (name) => {\n    setFoodList([]);\n    const meal = await api.get(`/search.php?s=${name}`);\n    setMeal(meal.data.meals[0]);\n  }, [setMeal]);\n\n  //Getting the recipes with names like the user input\n  const searchMeals = useCallback(async (value) => {\n    clearInterval(timer);\n    setFoodList([]);\n\n    const timeOut = setTimeout(() => {\n\n      const meals: string[] = [];\n\n      api.get(`/search.php?s=${value}`).then(response => {\n        if (response.data.meals && value !== '') response.data.meals.map((meal: any) => meals.push(meal.strMeal));\n      }).then(() => setFoodList(meals));\n\n    }, 400);\n\n    setTimer(timeOut);\n\n  }, [timer]);\n\n  return (\n    <Container>\n        <div>\n          <input type=\"text\" placeholder=\"Sarch a meal...\" onChange={(e) => searchMeals(e.target.value)} onBlur={(e) => { e.target.value = ''; setTimeout(() => { setFoodList([]) }, 500) }} />\n          {foodList.length > 0 &&\n            <ul>\n              {foodList.map(food => <li onClick={() => handleChoose(food)} key={food}>{food}</li>)}\n            </ul>\n          }\n        <FiSearch size={24} />\n        </div>\n        <button onClick={handleRandom}>\n          Find me a random meal!\n      </button>\n    </Container>\n  )\n\n}\n\nexport default Header;","import styled from 'styled-components';\nimport Colors from '../../config/Colors';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column; \n  min-height: 90%;\n`\n\nexport const FoodInfo = styled.div`\n  margin: 10px;\n  height: 100%;\n  margin-top: 20px;\n  border-radius: 12px;\n  box-shadow: 0 0 4px 4px rgba(0,0,0,0.4);\n  display: flex;\n  padding: 20px;\n  background: ${Colors.background.darker};\n\n  > div {\n    margin-left: 30px;\n\n    img {\n      height: 300px;\n      width: 300px;\n      border-radius: 12px;\n    }\n\n    h1 {\n      margin: 20px 0;\n    }\n    span {\n      font-weight: bold;\n      margin-right: 8px;  \n    }\n\n  }\n`\nexport const Tag = styled.p`\n\n  font-size: 14px;\n  background: ${Colors.details.normal};\n  color: white;\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 10px;\n  width: 150px;\n  margin: 5px 0;\n  font-weight: bold;\n\n  &:hover {\n    cursor: default;\n  }\n`\n\nexport const FoodPrepare = styled.div`\n  \n  margin: 10px;\n  display: flex;\n  border-radius: 12px;\n  box-shadow: 0 0 4px 4px rgba(0,0,0,0.4);\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  background: ${Colors.background.darker};\n\n  iframe { \n    order: 2;\n    height: 400px;\n    width: 70%;\n    align-self: center;\n    justify-self: center;\n    margin: 40px 0;\n    border: 0;\n  }\n\n  span {\n    font-size: 20px;\n    font-weight: bold;\n  }\n\n  p {\n    font-weight: 400;\n  \n    & + p {\n      margin-top: 20px;\n    }\n  }\n`","import React, { useEffect, useState } from 'react';\nimport { Container, FoodInfo, Tag, FoodPrepare } from './style';\n\ninterface BodyProps {\n  meal: any;\n}\n\ninterface Ingredients {\n  name: string,\n  quantity: string;\n}\n\nconst Body: React.FC<BodyProps> = ({ meal }) => {\n\n  const [ingredients, setIngredients] = useState<Ingredients[]>([]);\n  const [tags, setTags] = useState<string[]>([]);\n\n\n  useEffect(() => {\n    const rows = [];\n    console.log(meal.strYoutube+'autoplay=1');\n\n    for (var i = 1; i < 21; i++) {\n      if (meal[`strIngredient${i}`] === '') break;\n      let name = meal[`strIngredient${i}`];\n      let quantity = meal[`strMeasure${i}`];\n      rows.push({ name, quantity });\n    }\n\n    if (meal.strTags) {\n      let tags = meal.strTags.split(',');\n      setTags(tags);\n    }\n\n    setIngredients(rows);\n  }, [meal]);\n\n  return (\n    <Container>\n      <FoodInfo>\n        <div>\n          <img src={meal.strMealThumb} alt={meal.strMeal} />\n          <h1>{meal.strMeal}</h1>\n          <p><span>Category:</span>{meal.strCategory}</p>\n          <p><span>Culture:</span>{meal.strArea}</p>\n          {tags.map(tag =>\n            <Tag key={tag}>{tag}</Tag>\n          )}\n        </div>\n        <FoodPrepare>\n          <p><span>How to prepare:</span></p>\n          <p>{meal.strInstructions}</p>\n          <iframe title=\"Recipe video\" allow='autoplay' src={meal.strYoutube.replace('watch?v=','embed/')+'?autoplay=1&modestbranding=1&rel=0'}></iframe>\n        </FoodPrepare>\n      </ FoodInfo>\n    </Container>\n  )\n\n};\n\nexport default Body;","import styled, { createGlobalStyle } from 'styled-components';\nimport Colors from './config/Colors';\n\nexport default createGlobalStyle`\n  \n  * {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    font-family: 'Mulish', sans-serif;\n  }\n\n  body {\n    background: ${Colors.background.normal};\n  }\n\n`\n\nexport const Container = styled.div`\n  min-height: 100vh;\n`;","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Body from './components/Body';\nimport { Container } from './style';\n\n\nfunction App() {\n\n  const [meal, setMeal] = useState<any>({});\n\n  return (\n    < Container>\n      <Header setMeal={setMeal} />\n      {meal.strMeal && <Body meal={meal} />}\n    </ Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyle from './style';\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}