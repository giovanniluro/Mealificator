{"version":3,"sources":["config/Colors.ts","components/Header/style.ts","services/api.ts","components/Header/index.tsx","components/Body/style.ts","components/Body/index.tsx","style.ts","App.tsx","index.tsx"],"names":["normal","lighter","darker","Container","styled","div","Colors","api","axios","create","baseURL","Header","setMeal","useState","timer","setTimer","foodList","setFoodList","useEffect","get","then","meal","data","meals","handleRandom","useCallback","a","handleChoose","name","searchMeals","value","clearInterval","timeOut","setTimeout","response","map","push","strMeal","type","placeholder","onChange","e","target","onBlur","length","food","onClick","key","size","FoodInfo","Tag","p","FoodPrepare","Ingredients","Body","ingredients","setIngredients","tags","setTags","steps","setSteps","rows","i","quantity","id","strTags","split","strInstructions","src","strMealThumb","alt","strCategory","strArea","tag","ingredient","step","title","allow","strYoutube","replace","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b6022e5.chunk.js","sourcesContent":["export default {\n  main: {\n    normal: \"#606C38\",\n    lighter: \"#778745\",\n    darker: \"#48512A\"\n  },\n  background: {\n    normal: \"#FEFAE0\",\n    lighter: \"#FFFFFF\",\n    darker: \"#FDF5C4\"\n  },\n  text: {\n    normal: \"#342E37\",\n    lighter: \"#3F3843\",\n    darker: \"#1F1C21\"\n  },\n  details: {\n    normal: \"#202A25\",\n    lighter: \"#2C3A33\",\n    darker: \"#060D0E\"\n  }\n\n}","import styled from 'styled-components';\nimport Colors from '../../config/Colors';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 10%;\n  background: ${Colors.details.normal};\n  padding: 12px;\n\n  > div {\n    display: flex;\n    width: 30%;\n    align-items: center;\n    justify-content: flex-end;\n    position: relative;\n\n    input {\n      padding: 6px;\n      background: ${Colors.background.normal};\n      border: 0px solid transparent;\n      width: 60%;\n      transition: .4s;\n\n      &:focus {\n        outline: 0;\n        width: 100%;\n      }\n\n      &:focus + ul {\n        width: 100%;\n        display: flex;\n        opacity: 1;\n        animation: showlist .4s;\n      }\n    }\n\n    ul {\n      list-style: none;\n      position: absolute;\n      top: 101%;\n      background: ${Colors.background.normal};\n      width: 60%;\n      overflow: auto;\n      max-height: 500px;\n      flex-direction: column;\n      opacity: 0;\n      box-shadow: 0 4px 4px 4px rgba(0,0,0,0.3);\n      transition: .4s;\n\n      li {\n        padding: 6px 10px;\n        transition: .6s;\n\n        &:hover {\n          background: rgba(119,135,69,0.7);\n        }\n      }\n\n      @keyframes showlist {\n        from {\n          opacity: 0;\n          transform: translateY(-40px);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n    }\n  }\n\n  svg {\n    margin-left: 12px;\n    color: ${Colors.background.normal};\n  }\n\n  span{\n    margin: 0 50px;\n    color: ${Colors.background.normal};\n  }\n\n  button {\n    background: #0B4F6C;\n    color: ${Colors.background.normal};\n    padding: 12px;\n    border-radius: 8px;\n    border: 0;\n    font-weight: bold;\n    transition: .4s;\n\n    &:hover {\n      cursor: pointer;\n      background: #0F6C95;\n    }\n\n    &:focus {\n      outline: 0;\n    }\n\n  }\n\n  @media(max-width: 600px) {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 0px;\n    padding: 12px;\n    box-shadow: 4px 0 4px 4px rgba(0,0,0,0.4);\n\n    svg {\n      display: none;\n    }  \n\n    div, button {\n      margin: 5px 0;\n      width: 90%;\n    }\n\n    span {\n      margin: 10px 0;\n    }\n\n    > div {\n      input {\n        width: 100%;\n        animation: none;\n      }\n    }\n  }\n`;","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://www.themealdb.com/api/json/v1/1/'\n});\n\nexport default api;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { Container } from './style';\nimport { FiSearch } from 'react-icons/fi';\nimport api from '../../services/api';\n\ninterface HeaderProps {\n  setMeal: (meal: any) => void;\n}\n\nconst Header: React.FC<HeaderProps> = ({ setMeal }) => {\n\n  const [timer, setTimer] = useState<number>(0);\n  const [foodList, setFoodList] = useState<string[]>([]);\n\n  useEffect(() => {\n    api.get('/random.php').then(meal => setMeal(meal.data.meals[0]));\n  }, [setMeal]);\n\n  //Choosing a random meal\n  const handleRandom = useCallback(async () => {\n    const meal = await api.get('/random.php');\n    setMeal(meal.data.meals[0]);\n  }, [setMeal]);\n\n  //Handling the choosen recipe from the list\n  const handleChoose = useCallback(async (name) => {\n    setFoodList([]);\n    const meal = await api.get(`/search.php?s=${name}`);\n    setMeal(meal.data.meals[0]);\n  }, [setMeal]);\n\n  //Getting the recipes with names like the user input\n  const searchMeals = useCallback(async (value) => {\n    clearInterval(timer);\n    setFoodList([]);\n\n    const timeOut = setTimeout(() => {\n\n      const meals: string[] = [];\n\n      api.get(`/search.php?s=${value}`).then(response => {\n        if (response.data.meals && value !== '') response.data.meals.map((meal: any) => meals.push(meal.strMeal));\n      }).then(() => setFoodList(meals));\n\n    }, 400);\n\n    setTimer(timeOut);\n\n  }, [timer]);\n\n  return (\n    <Container>\n      <div>\n        <input type=\"text\" placeholder=\"Sarch a meal...\" onChange={(e) => searchMeals(e.target.value)} onBlur={(e) => { e.target.value = ''; setTimeout(() => { setFoodList([]) }, 500) }} />\n        {foodList.length > 0 &&\n          <ul>\n            {foodList.map(food => <li onClick={() => handleChoose(food)} key={food}>{food}</li>)}\n          </ul>\n        }\n      </div>\n      <FiSearch size={24} />\n      <span>OR</span>\n      <button onClick={handleRandom}>\n        Find me a random meal!\n      </button>\n    </Container>\n  )\n\n}\n\nexport default Header;","import styled from 'styled-components';\nimport Colors from '../../config/Colors';\n\nexport const Container = styled.div`\n`\n\nexport const FoodInfo = styled.div`\n  margin: 10px;\n  height: 100%;\n  border-radius: 12px;\n  box-shadow: 0 0 4px 4px rgba(0,0,0,0.4);\n  display: flex;\n  padding: 20px;\n  background: ${Colors.background.darker};\n\n  @media(max-width: 1100px) {\n    flex-direction: column;\n  }\n  \n  @media(max-width: 400px) {      \n    padding: 5px;\n  }\n\n  > div {\n    margin-left: 30px;\n\n    img {\n      height: 300px;\n      width: 300px;\n      border-radius: 12px;\n    }\n\n    div {\n      h1 {\n        margin: 20px 0;\n      }\n\n      span {\n        font-weight: bold;\n        margin-right: 8px;  \n      }\n    }\n    \n    @media(max-width: 1100px) {\n      display: flex;\n      margin-bottom: 30px;\n\n      div {\n\n        h1 {\n          margin: 0;\n        }\n        display: flex;\n        flex-direction: column;\n        margin: 0 20px;\n      }\n    }\n\n    @media(max-width: 820px) {\n      display:flex;\n      flex-direction: column;\n      align-items: center;\n\n      img {\n        border-radius: 50%;\n        box-shadow: 0 0 5px 5px rgba(0,0,0,0.4);\n        margin-bottom: 20px;\n      }\n\n      div {\n\n        h1{\n          margin: 10px 0;\n          text-align: center;\n        }\n        \n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n      }\n    }\n\n    @media(max-width: 500px) {  \n      margin: 0;\n      margin-top: 20px;\n\n      img {\n        height: 75%;\n        width: 75%;\n      }\n      \n      div {\n        h1{\n          text-align: center;\n        }\n      }\n\n    }\n  } \n\n  @media(max-width: 550px) {      \n    margin: 15px 6px;\n\n    div {\n      h1{\n        text-align: center;\n      }\n    }\n  }\n`\n\nexport const Tag = styled.p`\n\n  font-size: 14px;\n  background: ${Colors.details.normal};\n  color: white;\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 10px;\n  width: 150px;\n  margin: 5px 0;\n  font-weight: bold;\n\n  &:hover {\n    cursor: default;\n  }\n`\n\nexport const FoodPrepare = styled.div`\n  \n  margin: 10px;\n  border-radius: 12px;\n  box-shadow: 0 0 4px 4px rgba(0,0,0,0.4);\n  display: flex;\n  flex-direction: column;\n  padding: 40px 80px;\n  background: ${Colors.background.darker};\n\n  iframe { \n    order: 2;\n    height: 400px;\n    width: 70%;\n    align-self: center;\n    justify-self: center;\n    margin: 40px 0;\n    border: 0;\n\n\n    @media(max-width: 1100px) {\n      width: 90%;\n    } \n  }\n\n  span {\n    font-size: 20px;\n    font-weight: bold;\n  }\n\n  ul, li {\n    font-weight: bold;\n    text-align: justify;\n  }\n\n  ul {\n    margin-top: 20px;\n    list-style: decimal;\n  }\n\n  li {\n    margin-top: 5px;\n    padding: 3px;\n\n    span {\n      font-weight: normal;\n    }\n    &:after {\n      content: '.';\n    }\n  }\n\n  @media(max-width: 550px) {      \n    padding: 2px;\n    border: 0;\n    box-shadow: none;\n\n    iframe {\n      height: 300px;\n    }\n\n    &:before {\n      content: '';\n      height: 2px;\n      width: 60%;\n      background: ${Colors.details.normal};\n      margin: 20px 0;\n    }\n\n    ul {\n      li {\n        margin: 8px;\n      }\n    }\n  }\n`\n\nexport const Ingredients = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  h2 {\n    margin-bottom: 20px;\n  }\n\n  &:before {\n    content: '';\n    height: 2px;\n    width: 60%;\n    background: ${Colors.details.normal};\n    margin: 20px;\n  }\n\n  @media(min-width: 820px) and (max-width:1099px) {\n    margin: 0;\n\n    &:before {\n    content: '';\n    height: 260px;\n    width: 2px;\n    background: black;\n    margin: 20px;\n    position: absolute;\n    left: -40px;\n    }\n  }\n\n`","import React, { useEffect, useState } from 'react';\nimport { Container, FoodInfo, Tag, FoodPrepare, Ingredients } from './style';\n\ninterface BodyProps {\n  meal: any;\n}\n\ninterface Ingredients {\n  name: string,\n  quantity: string;\n  id: number;\n}\n\nconst Body: React.FC<BodyProps> = ({ meal }) => {\n\n  const [ingredients, setIngredients] = useState<Ingredients[]>([]);\n  const [tags, setTags] = useState<string[]>([]);\n  const [steps, setSteps] = useState<string[]>([]);\n\n\n  useEffect(() => {\n    const rows = [];\n    for (var i = 1; i < 21; i++) {\n      if (meal[`strIngredient${i}`] === '' || meal[`strIngredient${i}`] === null ) break;\n      let name = meal[`strIngredient${i}`];\n      let quantity = meal[`strMeasure${i}`];\n      let id = i;\n      rows.push({ id, name, quantity });\n    }\n\n    if (meal.strTags) {\n      let tags = meal.strTags.split(',');\n      setTags(tags);\n    }\n    //setSteps([meal.strInstructions]);\n    setSteps(meal.strInstructions.split('. '));\n    setIngredients(rows);\n  }, [meal]);\n\n  return (\n    <Container>\n      <FoodInfo>\n        <div>\n          <img src={meal.strMealThumb} alt={meal.strMeal} />\n          <div>\n            <h1>{meal.strMeal}</h1>\n            <p><span>Category:</span>{meal.strCategory}</p>\n            <p><span>Culture:</span>{meal.strArea}</p>\n            {tags.map(tag =>\n              <Tag key={tag}>{tag}</Tag>\n            )}\n          </div>\n\n          <Ingredients>\n            <h2>Ingredients:</h2>\n            {ingredients.map(ingredient => {\n              if (ingredient.name !== '') {\n                if (ingredient.quantity !== '') {\n                  return (\n                    <p key={ingredient.id}><span>{ingredient.name}:</span>{ingredient.quantity}</p>\n                  );\n                } else {\n                  return (\n                    <p key={ingredient.id}><span>{ingredient.name}</span></p>\n                  );\n                }\n              }\n            })}\n          </Ingredients>\n        </div>\n        <FoodPrepare>\n          <h2>How to prepare:</h2>\n          <ul>\n          {steps.map(step => {\n            if(step!=='' && step.length > 3) return <li><span>{step}</span></li>;\n            return;\n            }\n          )}\n          </ul>\n          <iframe title=\"Recipe video\" allow='autoplay' src={meal.strYoutube.replace('watch?v=', 'embed/') + '?autoplay=1&modestbranding=1&rel=0'}></iframe>\n        </FoodPrepare>\n      </ FoodInfo>\n    </Container>\n  )\n\n};\n\nexport default Body;","import styled, { createGlobalStyle } from 'styled-components';\nimport Colors from './config/Colors';\n\nexport default createGlobalStyle`\n  \n  * {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    font-family: 'Mulish', sans-serif;\n  }\n\n  body {\n    background: ${Colors.background.normal};\n  }\n\n`\n\nexport const Container = styled.div`\n`;","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Body from './components/Body';\nimport { Container } from './style';\n\n\nfunction App() {\n\n  const [meal, setMeal] = useState<any>({});\n\n  return (\n    < Container>\n      <Header setMeal={setMeal} />\n      {meal.strMeal && <Body meal={meal} />}\n    </ Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyle from './style';\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}