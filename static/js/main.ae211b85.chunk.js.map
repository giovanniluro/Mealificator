{"version":3,"sources":["config/Colors.ts","components/Header/style.ts","services/api.ts","components/Header/index.tsx","components/Body/index.tsx","App.tsx","style.ts","index.tsx"],"names":["normal","lighter","darker","Container","styled","div","Colors","api","axios","create","baseURL","Header","setMeal","useState","timer","setTimer","foodList","setFoodList","handleRandom","useCallback","a","get","meal","data","meals","handleChoose","name","searchMeals","value","clearInterval","timeOut","setTimeout","then","response","map","push","strMeal","type","onChange","e","target","onBlur","length","food","onClick","key","size","Body","App","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"yOAAe,EACP,CACJA,OAAQ,UACRC,QAAS,UACTC,OAAQ,WAJG,EAMD,CACVF,OAAQ,UACRC,QAAS,UACTC,OAAQ,WATG,EAgBJ,CACPF,OAAQ,UACRC,QAAS,UACTC,OAAQ,W,6oDChBL,IAAMC,EAAYC,IAAOC,IAAV,IAKNC,EAAYN,OAYRM,EAAkBN,OAsBlBM,EAAkBN,OA+BzBM,EAAkBN,OAKbM,EAAeN,OACpBM,EAAkBN,OASXM,EAAeL,S,gBClFpBM,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,6CC8DIC,EAxDuB,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EAEzBC,mBAAiB,GAFQ,mBAE5CC,EAF4C,KAErCC,EAFqC,OAGnBF,mBAAmB,IAHA,mBAG5CG,EAH4C,KAGlCC,EAHkC,KAM7CC,EAAeC,sBAAW,sBAAC,4BAAAC,EAAA,sEACZb,EAAIc,IAAI,eADI,OACzBC,EADyB,OAE/BV,EAAQU,EAAKC,KAAKC,MAAM,IAFO,2CAG9B,CAACZ,IAGEa,EAAeN,sBAAW,uCAAC,WAAOO,GAAP,eAAAN,EAAA,6DAC/BH,EAAY,IADmB,SAEZV,EAAIc,IAAJ,wBAAyBK,IAFb,OAEzBJ,EAFyB,OAG/BV,EAAQU,EAAKC,KAAKC,MAAM,IAHO,2CAAD,sDAI7B,CAACZ,IAGEe,EAAcR,sBAAW,uCAAC,WAAOS,GAAP,eAAAR,EAAA,sDAC9BS,cAAcf,GACdG,EAAY,IAENa,EAAUC,YAAW,WAEzB,IAAMP,EAAkB,GAExBjB,EAAIc,IAAJ,wBAAyBO,IAASI,MAAK,SAAAC,GACjCA,EAASV,KAAKC,OAAmB,KAAVI,GAAcK,EAASV,KAAKC,MAAMU,KAAI,SAACZ,GAAD,OAAeE,EAAMW,KAAKb,EAAKc,eAC/FJ,MAAK,kBAAMf,EAAYO,QAEzB,KAEHT,EAASe,GAdqB,2CAAD,sDAgB5B,CAAChB,IAEJ,OACE,kBAACX,EAAD,KACE,6BACE,2BAAOkC,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAOZ,EAAYY,EAAEC,OAAOZ,QAAQa,OAAQ,SAACF,GAAQA,EAAEC,OAAOZ,MAAQ,GAAIG,YAAW,WAAQd,EAAY,MAAO,QAC5ID,EAAS0B,OAAS,GACjB,4BACG1B,EAASkB,KAAI,SAAAS,GAAI,OAAI,wBAAIC,QAAS,kBAAMnB,EAAakB,IAAOE,IAAKF,GAAOA,QAI/E,kBAAC,IAAD,CAAUG,KAAM,KAChB,4BAAQF,QAAS1B,GAAjB,4BCzCS6B,EAVmB,SAAC,GAAW,EAAVzB,KAElC,OACE,oCCQW0B,MAZf,WAAgB,IAAD,EAEWnC,mBAAc,IAFzB,mBAENS,EAFM,KAEAV,EAFA,KAIb,OACE,oCACE,kBAAC,EAAD,CAAQA,QAASA,IACjB,kBAAC,EAAD,CAAMU,KAAMA,M,iPCTH2B,kBAAf,IASkB3C,EAAkBN,QCPpCkD,IAASC,OACP,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ae211b85.chunk.js","sourcesContent":["export default {\n  main: {\n    normal: \"#606C38\",\n    lighter: \"#778745\",\n    darker: \"#48512A\"\n  },\n  background: {\n    normal: \"#FEFAE0\",\n    lighter: \"#FFFFFF\",\n    darker: \"#FEF9D7\"\n  },\n  text: {\n    normal: \"#342E37\",\n    lighter: \"#3F3843\",\n    darker: \"#1F1C21\"\n  },\n  details: {\n    normal: \"#202A25\",\n    lighter: \"#2C3A33\",\n    darker: \"#060D0E\"\n  }\n\n}","import styled from 'styled-components';\nimport Colors from '../../config/Colors';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 70px;\n  background: ${Colors.main.normal};\n  padding: 12px;\n\n  > div {\n    display: flex;\n    width: 30%;\n    align-items: center;\n    justify-content: flex-end;\n    position: relative;\n\n    input {\n      padding: 6px;\n      background: ${Colors.background.normal};\n      border: 0px solid transparent;\n      width: 60%;\n      transition: .4s;\n\n      &:focus {\n        outline: 0;\n        width: 100%;\n      }\n\n      &:focus + ul {\n        width: 100%;\n        display: flex;\n        opacity: 1;\n        animation: showlist .4s;\n      }\n    }\n\n    ul {\n      list-style: none;\n      position: absolute;\n      top: 101%;\n      background: ${Colors.background.normal};\n      width: 60%;\n      flex-direction: column;\n      opacity: 0;\n      box-shadow: 0 4px 4px 4px rgba(0,0,0,0.3);\n      transition: .4s;\n\n      li {\n        padding: 6px 10px;\n        transition: .6s;\n\n        &:hover {\n          background: rgba(119,135,69,0.7);\n        }\n      }\n\n      @keyframes showlist {\n        from {\n          opacity: 0;\n          transform: translateY(-40px);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n    }\n  }\n\n  svg {\n    margin-left: 12px;\n    color: ${Colors.background.normal};\n  }\n\n  button {\n    margin-left: 100px;\n    background: ${Colors.details.normal};\n    color: ${Colors.background.normal};\n    padding: 12px;\n    border-radius: 8px;\n    border: 0;\n    font-weight: bold;\n    transition: .4s;\n\n    &:hover {\n      cursor: pointer;\n      background: ${Colors.details.lighter};\n    }\n\n    &:focus {\n      outline: 0;\n    }\n\n  }\n`;","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://www.themealdb.com/api/json/v1/1/'\n});\n\nexport default api;\n","import React, { useCallback, useState } from 'react';\nimport { Container } from './style';\nimport { FiSearch } from 'react-icons/fi';\nimport api from '../../services/api';\n\ninterface HeaderProps {\n  setMeal: (meal: any) => void;\n}\n\nconst Header: React.FC<HeaderProps> = ({setMeal}) => {\n\n  const [timer, setTimer] = useState<number>(0);\n  const [foodList, setFoodList] = useState<string[]>([]);\n\n  //Choosing a random meal\n  const handleRandom = useCallback(async () => {\n    const meal = await api.get('/random.php');\n    setMeal(meal.data.meals[0]);\n  }, [setMeal]);\n\n  //Handling the choosen recipe from the list\n  const handleChoose = useCallback(async (name) => {\n    setFoodList([]);\n    const meal = await api.get(`/search.php?s=${name}`);   \n    setMeal(meal.data.meals[0]); \n  }, [setMeal]);\n\n  //Getting the recipes with names like the user input\n  const searchMeals = useCallback(async (value) => {\n    clearInterval(timer);\n    setFoodList([]);\n\n    const timeOut = setTimeout(() => {\n\n      const meals: string[] = [];\n\n      api.get(`/search.php?s=${value}`).then(response => {\n        if (response.data.meals && value !== '') response.data.meals.map((meal: any) => meals.push(meal.strMeal));\n      }).then(() => setFoodList(meals));\n\n    }, 400);\n\n    setTimer(timeOut);\n\n  }, [timer]);\n\n  return (\n    <Container>\n      <div>\n        <input type=\"text\" onChange={(e) => searchMeals(e.target.value)} onBlur={(e) => { e.target.value = ''; setTimeout(() => { setFoodList([]) }, 500) }} />\n        {foodList.length > 0 &&\n          <ul>\n            {foodList.map(food => <li onClick={() => handleChoose(food)} key={food}>{food}</li>)}\n          </ul>\n        }\n      </div>\n      <FiSearch size={24} />\n      <button onClick={handleRandom}>\n        Find me a random meal!\n      </button>\n    </Container>\n  )\n\n}\n\nexport default Header;","import React from 'react';\n\ninterface BodyProps {\n  meal: any;\n}\n\nconst Body: React.FC<BodyProps> = ({meal}) => {\n\n  return (\n    <div>\n      oi\n    </div>\n  )\n\n};\n\nexport default Body;","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Body from './components/Body';\n\n\nfunction App() {\n\n  const [meal, setMeal] = useState<any>({});\n\n  return (\n    <>\n      <Header setMeal={setMeal} />\n      <Body meal={meal} />\n    </>\n  );\n}\n\nexport default App;\n","import styled, { createGlobalStyle } from 'styled-components';\nimport Colors from './config/Colors';\n\nexport default createGlobalStyle`\n  \n  * {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n  }\n\n  body {\n    background: ${Colors.background.normal};\n  }\n\n  p, input, button {\n    font-size: 20px;\n  }\n\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyle from './style';\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}